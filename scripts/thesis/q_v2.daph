// Arguments:
// - f ... filename of the adjacency matrix (provide as `--args f=\"foo.csv\"`)
// TCP-H Shipping Priority Query (Q3)
// validation:
//   segment = BUILDING (encoded 0)
//   date = 1995-03-15 (encoded 9203)
// benchmark:
//   segment = any (encoded: 0-4)
//   date = 1995-03-01, ..., 1995-03-31 (encoded: 9189 - 9219)

print("Query 2 for Thesis Evaluation version 1");

query =	"SELECT
	l.l_orderkey,
	sum(l.l_extendedprice * (l.l_discount  * -1.0 + 1)) AS revenue,
	o.o_orderdate,
	o.o_shippriority
FROM
	customer c
JOIN orders o ON c.c_custkey = o.o_custkey
JOIN lineitem l ON o.o_orderkey = l.l_orderkey
WHERE
	c.c_mktsegment = 0
	AND o.o_orderdate < 9203
	AND l.l_shipdate > 9203
GROUP BY
	l.l_orderkey,
	o.o_orderdate,
	o.o_shippriority
ORDER BY
    o.o_orderdate;
";

print("start DAPHNE Program");

t0 = now();

c = readFrame("data/s10/customer.csv");
l = readFrame("data/s10/lineitem.csv");
o = readFrame("data/s10/orders.csv");

//c = c[0:20000,];
//l = l[0:50000,];
//o = o[0:20000,];

t1 = now();

print("load in finished");

registerView("customer", c);
registerView("lineitem", l);
registerView("orders", o);

t2 = now();

result = sql(query);

t3 = now();

print("\nTop ten Results: ");
print(result[0:10, ]);
print("\nResult size: ");
print(nrow(result));
time_l = t1 - t0;
time_s = t3 - t2;

print("\nloading time: ");
print(time_l);

print("\nSQL time: ");
print(time_s);
